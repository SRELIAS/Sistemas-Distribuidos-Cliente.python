#Curso de Engenharia de Software - UniEVANGÉLICA 
#Disciplina de Sistemas Distribuidos 
#Dev: Elias Soares
#DATA: 23/05/2023  

Quando falamos em sincronização de sockets, estamos nos referindo ao processo de coordenação e controle da comunicação entre os pontos de extremidade de uma conexão socket. Um socket é uma interface de programação que permite a comunicação entre processos em uma rede.

Existem diferentes abordagens para sincronizar sockets, dependendo do tipo de comunicação desejada. Vamos explorar dois modelos comuns:

    Modelo Cliente-Servidor:
    Nesse modelo, a comunicação ocorre entre um cliente e um servidor. O cliente é responsável por iniciar a comunicação, enquanto o servidor aguarda por solicitações de clientes. O cliente envia uma solicitação ao servidor e aguarda a resposta correspondente. Durante esse período de espera, o cliente pode bloquear sua execução até que a resposta seja recebida, o que é conhecido como sincronização bloqueante ou síncrona. O servidor recebe a solicitação, processa-a e envia uma resposta de volta ao cliente. Esse modelo é comumente usado em aplicações como serviços web, onde os clientes solicitam recursos específicos dos servidores.

    Modelo Peer-to-Peer:
    Nesse modelo, não há distinção clara entre cliente e servidor. Os pontos de extremidade, chamados de pares (peers), atuam como clientes e servidores ao mesmo tempo. Cada par pode enviar e receber dados, bem como iniciar e responder a solicitações. A comunicação ocorre diretamente entre os pares, sem a necessidade de um servidor centralizado. Nesse modelo, a sincronização de sockets pode ser implementada de diferentes maneiras. Por exemplo, pode-se adotar um mecanismo assíncrono de troca de mensagens, em que os pares podem enviar mensagens uns aos outros sem esperar uma resposta imediata. Outra opção é usar um esquema de bloqueio não síncrono, em que os pares podem enviar mensagens e continuar suas operações sem aguardar uma resposta imediata. O modelo peer-to-peer é comumente utilizado em sistemas de compartilhamento de arquivos, jogos multiplayer e aplicações de comunicação em tempo real.

Esses modelos de sincronização de sockets são aplicáveis a diferentes cenários de comunicação e permitem a coordenação eficiente entre os pontos de extremidade. A escolha do modelo mais adequado depende dos requisitos específicos da aplicação e da natureza da comunicação que se deseja estabelecer.