#Curso de Engenharia de Software - UniEVANGÉLICA 
#Disciplina de Sistemas Distribuidos 
#Dev: Elias Soares
#DATA: 23/05/2023 

/// Este código representa um servidor básico escrito em Python, utilizando a biblioteca de sockets para comunicação em rede. O servidor aguarda por conexões de clientes, recebe as mensagens enviadas pelos clientes, processa essas mensagens e envia uma resposta apropriada.
 

import socket

# Define o endereço de host e a porta do servidor
HOST = '127.0.0.1'
PORT = 12345

# Cria um socket TCP/IP
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Vincula o socket ao endereço de host e porta
server_socket.bind((HOST, PORT))

# Define o número máximo de conexões em fila
server_socket.listen(5)

print('Aguardando conexões...')

while True:
    # Aceita uma nova conexão de cliente
    client_socket, client_address = server_socket.accept()
    print('Cliente conectado:', client_address)

    # Recebe a mensagem do cliente
    message = client_socket.recv(1024).decode('utf-8')

    # Processa a mensagem do cliente
    message_parts = message.split(':')
    message_type = message_parts[0]
    message_body = message_parts[1]

    # Lógica do servidor - exemplo: responder com uma saudação personalizada
    response_message = f'Olá, cliente {client_address}!'
    client_socket.sendall(response_message.encode('utf-8'))

    # Fecha a conexão com o cliente
    client_socket.close()

# Fecha o socket do servidor
server_socket.close()